/**
 * SPDX-FileCopyrightText: (c) 2024 Liferay, Inc. https://liferay.com
 * SPDX-License-Identifier: LGPL-2.1-or-later OR LicenseRef-Liferay-DXP-EULA-2.0.0-2023-06
 */

package hr.crosig.proposal.model.impl;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringUtil;

import hr.crosig.proposal.model.PolicyOptions;
import hr.crosig.proposal.model.PolicyOptionsModel;

import java.io.Serializable;

import java.lang.reflect.InvocationHandler;

import java.sql.Blob;
import java.sql.Types;

import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Objects;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the PolicyOptions service. Represents a row in the &quot;AP_Proposal_PolicyOptions&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>PolicyOptionsModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link PolicyOptionsImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see PolicyOptionsImpl
 * @generated
 */
public class PolicyOptionsModelImpl
	extends BaseModelImpl<PolicyOptions> implements PolicyOptionsModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a policy options model instance should use the <code>PolicyOptions</code> interface instead.
	 */
	public static final String TABLE_NAME = "AP_Proposal_PolicyOptions";

	public static final Object[][] TABLE_COLUMNS = {
		{"policyOptionsId", Types.BIGINT}, {"companyId", Types.BIGINT},
		{"userId", Types.BIGINT}, {"userName", Types.VARCHAR},
		{"createDate", Types.TIMESTAMP}, {"modifiedDate", Types.TIMESTAMP},
		{"proposalId", Types.BIGINT}, {"currency_", Types.VARCHAR},
		{"termsDate", Types.TIMESTAMP}, {"productCategory", Types.VARCHAR},
		{"productExtNumber", Types.VARCHAR}, {"issueDate", Types.TIMESTAMP},
		{"contractStartDate", Types.TIMESTAMP},
		{"contractEndDate", Types.TIMESTAMP}, {"contractPeriod", Types.VARCHAR},
		{"durationYear", Types.INTEGER}, {"policyStartDate", Types.TIMESTAMP},
		{"policyEndDate", Types.TIMESTAMP}, {"policyNumberDays", Types.INTEGER},
		{"communicationMethod", Types.VARCHAR}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("policyOptionsId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("proposalId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("currency_", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("termsDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("productCategory", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("productExtNumber", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("issueDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("contractStartDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("contractEndDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("contractPeriod", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("durationYear", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("policyStartDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("policyEndDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("policyNumberDays", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("communicationMethod", Types.VARCHAR);
	}

	public static final String TABLE_SQL_CREATE =
		"create table AP_Proposal_PolicyOptions (policyOptionsId LONG not null primary key,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,proposalId LONG,currency_ VARCHAR(75) null,termsDate DATE null,productCategory VARCHAR(75) null,productExtNumber VARCHAR(75) null,issueDate DATE null,contractStartDate DATE null,contractEndDate DATE null,contractPeriod VARCHAR(75) null,durationYear INTEGER,policyStartDate DATE null,policyEndDate DATE null,policyNumberDays INTEGER,communicationMethod VARCHAR(75) null)";

	public static final String TABLE_SQL_DROP =
		"drop table AP_Proposal_PolicyOptions";

	public static final String ORDER_BY_JPQL =
		" ORDER BY policyOptions.policyOptionsId ASC";

	public static final String ORDER_BY_SQL =
		" ORDER BY AP_Proposal_PolicyOptions.policyOptionsId ASC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long PROPOSALID_COLUMN_BITMASK = 1L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *		#getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long POLICYOPTIONSID_COLUMN_BITMASK = 2L;

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
	}

	public PolicyOptionsModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _policyOptionsId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setPolicyOptionsId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _policyOptionsId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return PolicyOptions.class;
	}

	@Override
	public String getModelClassName() {
		return PolicyOptions.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<PolicyOptions, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		for (Map.Entry<String, Function<PolicyOptions, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<PolicyOptions, Object> attributeGetterFunction =
				entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply((PolicyOptions)this));
		}

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<PolicyOptions, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<PolicyOptions, Object> attributeSetterBiConsumer =
				attributeSetterBiConsumers.get(attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(PolicyOptions)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<PolicyOptions, Object>>
		getAttributeGetterFunctions() {

		return AttributeGetterFunctionsHolder._attributeGetterFunctions;
	}

	public Map<String, BiConsumer<PolicyOptions, Object>>
		getAttributeSetterBiConsumers() {

		return AttributeSetterBiConsumersHolder._attributeSetterBiConsumers;
	}

	private static class AttributeGetterFunctionsHolder {

		private static final Map<String, Function<PolicyOptions, Object>>
			_attributeGetterFunctions;

		static {
			Map<String, Function<PolicyOptions, Object>>
				attributeGetterFunctions =
					new LinkedHashMap
						<String, Function<PolicyOptions, Object>>();

			attributeGetterFunctions.put(
				"policyOptionsId", PolicyOptions::getPolicyOptionsId);
			attributeGetterFunctions.put(
				"companyId", PolicyOptions::getCompanyId);
			attributeGetterFunctions.put("userId", PolicyOptions::getUserId);
			attributeGetterFunctions.put(
				"userName", PolicyOptions::getUserName);
			attributeGetterFunctions.put(
				"createDate", PolicyOptions::getCreateDate);
			attributeGetterFunctions.put(
				"modifiedDate", PolicyOptions::getModifiedDate);
			attributeGetterFunctions.put(
				"proposalId", PolicyOptions::getProposalId);
			attributeGetterFunctions.put(
				"currency", PolicyOptions::getCurrency);
			attributeGetterFunctions.put(
				"termsDate", PolicyOptions::getTermsDate);
			attributeGetterFunctions.put(
				"productCategory", PolicyOptions::getProductCategory);
			attributeGetterFunctions.put(
				"productExtNumber", PolicyOptions::getProductExtNumber);
			attributeGetterFunctions.put(
				"issueDate", PolicyOptions::getIssueDate);
			attributeGetterFunctions.put(
				"contractStartDate", PolicyOptions::getContractStartDate);
			attributeGetterFunctions.put(
				"contractEndDate", PolicyOptions::getContractEndDate);
			attributeGetterFunctions.put(
				"contractPeriod", PolicyOptions::getContractPeriod);
			attributeGetterFunctions.put(
				"durationYear", PolicyOptions::getDurationYear);
			attributeGetterFunctions.put(
				"policyStartDate", PolicyOptions::getPolicyStartDate);
			attributeGetterFunctions.put(
				"policyEndDate", PolicyOptions::getPolicyEndDate);
			attributeGetterFunctions.put(
				"policyNumberDays", PolicyOptions::getPolicyNumberDays);
			attributeGetterFunctions.put(
				"communicationMethod", PolicyOptions::getCommunicationMethod);

			_attributeGetterFunctions = Collections.unmodifiableMap(
				attributeGetterFunctions);
		}

	}

	private static class AttributeSetterBiConsumersHolder {

		private static final Map<String, BiConsumer<PolicyOptions, Object>>
			_attributeSetterBiConsumers;

		static {
			Map<String, BiConsumer<PolicyOptions, ?>>
				attributeSetterBiConsumers =
					new LinkedHashMap<String, BiConsumer<PolicyOptions, ?>>();

			attributeSetterBiConsumers.put(
				"policyOptionsId",
				(BiConsumer<PolicyOptions, Long>)
					PolicyOptions::setPolicyOptionsId);
			attributeSetterBiConsumers.put(
				"companyId",
				(BiConsumer<PolicyOptions, Long>)PolicyOptions::setCompanyId);
			attributeSetterBiConsumers.put(
				"userId",
				(BiConsumer<PolicyOptions, Long>)PolicyOptions::setUserId);
			attributeSetterBiConsumers.put(
				"userName",
				(BiConsumer<PolicyOptions, String>)PolicyOptions::setUserName);
			attributeSetterBiConsumers.put(
				"createDate",
				(BiConsumer<PolicyOptions, Date>)PolicyOptions::setCreateDate);
			attributeSetterBiConsumers.put(
				"modifiedDate",
				(BiConsumer<PolicyOptions, Date>)
					PolicyOptions::setModifiedDate);
			attributeSetterBiConsumers.put(
				"proposalId",
				(BiConsumer<PolicyOptions, Long>)PolicyOptions::setProposalId);
			attributeSetterBiConsumers.put(
				"currency",
				(BiConsumer<PolicyOptions, String>)PolicyOptions::setCurrency);
			attributeSetterBiConsumers.put(
				"termsDate",
				(BiConsumer<PolicyOptions, Date>)PolicyOptions::setTermsDate);
			attributeSetterBiConsumers.put(
				"productCategory",
				(BiConsumer<PolicyOptions, String>)
					PolicyOptions::setProductCategory);
			attributeSetterBiConsumers.put(
				"productExtNumber",
				(BiConsumer<PolicyOptions, String>)
					PolicyOptions::setProductExtNumber);
			attributeSetterBiConsumers.put(
				"issueDate",
				(BiConsumer<PolicyOptions, Date>)PolicyOptions::setIssueDate);
			attributeSetterBiConsumers.put(
				"contractStartDate",
				(BiConsumer<PolicyOptions, Date>)
					PolicyOptions::setContractStartDate);
			attributeSetterBiConsumers.put(
				"contractEndDate",
				(BiConsumer<PolicyOptions, Date>)
					PolicyOptions::setContractEndDate);
			attributeSetterBiConsumers.put(
				"contractPeriod",
				(BiConsumer<PolicyOptions, String>)
					PolicyOptions::setContractPeriod);
			attributeSetterBiConsumers.put(
				"durationYear",
				(BiConsumer<PolicyOptions, Integer>)
					PolicyOptions::setDurationYear);
			attributeSetterBiConsumers.put(
				"policyStartDate",
				(BiConsumer<PolicyOptions, Date>)
					PolicyOptions::setPolicyStartDate);
			attributeSetterBiConsumers.put(
				"policyEndDate",
				(BiConsumer<PolicyOptions, Date>)
					PolicyOptions::setPolicyEndDate);
			attributeSetterBiConsumers.put(
				"policyNumberDays",
				(BiConsumer<PolicyOptions, Integer>)
					PolicyOptions::setPolicyNumberDays);
			attributeSetterBiConsumers.put(
				"communicationMethod",
				(BiConsumer<PolicyOptions, String>)
					PolicyOptions::setCommunicationMethod);

			_attributeSetterBiConsumers = Collections.unmodifiableMap(
				(Map)attributeSetterBiConsumers);
		}

	}

	@Override
	public long getPolicyOptionsId() {
		return _policyOptionsId;
	}

	@Override
	public void setPolicyOptionsId(long policyOptionsId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_policyOptionsId = policyOptionsId;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyId = companyId;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException portalException) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userName = userName;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_modifiedDate = modifiedDate;
	}

	@Override
	public long getProposalId() {
		return _proposalId;
	}

	@Override
	public void setProposalId(long proposalId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_proposalId = proposalId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalProposalId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("proposalId"));
	}

	@Override
	public String getCurrency() {
		if (_currency == null) {
			return "";
		}
		else {
			return _currency;
		}
	}

	@Override
	public void setCurrency(String currency) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_currency = currency;
	}

	@Override
	public Date getTermsDate() {
		return _termsDate;
	}

	@Override
	public void setTermsDate(Date termsDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_termsDate = termsDate;
	}

	@Override
	public String getProductCategory() {
		if (_productCategory == null) {
			return "";
		}
		else {
			return _productCategory;
		}
	}

	@Override
	public void setProductCategory(String productCategory) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_productCategory = productCategory;
	}

	@Override
	public String getProductExtNumber() {
		if (_productExtNumber == null) {
			return "";
		}
		else {
			return _productExtNumber;
		}
	}

	@Override
	public void setProductExtNumber(String productExtNumber) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_productExtNumber = productExtNumber;
	}

	@Override
	public Date getIssueDate() {
		return _issueDate;
	}

	@Override
	public void setIssueDate(Date issueDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_issueDate = issueDate;
	}

	@Override
	public Date getContractStartDate() {
		return _contractStartDate;
	}

	@Override
	public void setContractStartDate(Date contractStartDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_contractStartDate = contractStartDate;
	}

	@Override
	public Date getContractEndDate() {
		return _contractEndDate;
	}

	@Override
	public void setContractEndDate(Date contractEndDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_contractEndDate = contractEndDate;
	}

	@Override
	public String getContractPeriod() {
		if (_contractPeriod == null) {
			return "";
		}
		else {
			return _contractPeriod;
		}
	}

	@Override
	public void setContractPeriod(String contractPeriod) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_contractPeriod = contractPeriod;
	}

	@Override
	public int getDurationYear() {
		return _durationYear;
	}

	@Override
	public void setDurationYear(int durationYear) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_durationYear = durationYear;
	}

	@Override
	public Date getPolicyStartDate() {
		return _policyStartDate;
	}

	@Override
	public void setPolicyStartDate(Date policyStartDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_policyStartDate = policyStartDate;
	}

	@Override
	public Date getPolicyEndDate() {
		return _policyEndDate;
	}

	@Override
	public void setPolicyEndDate(Date policyEndDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_policyEndDate = policyEndDate;
	}

	@Override
	public int getPolicyNumberDays() {
		return _policyNumberDays;
	}

	@Override
	public void setPolicyNumberDays(int policyNumberDays) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_policyNumberDays = policyNumberDays;
	}

	@Override
	public String getCommunicationMethod() {
		if (_communicationMethod == null) {
			return "";
		}
		else {
			return _communicationMethod;
		}
	}

	@Override
	public void setCommunicationMethod(String communicationMethod) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_communicationMethod = communicationMethod;
	}

	public long getColumnBitmask() {
		if (_columnBitmask > 0) {
			return _columnBitmask;
		}

		if ((_columnOriginalValues == null) ||
			(_columnOriginalValues == Collections.EMPTY_MAP)) {

			return 0;
		}

		for (Map.Entry<String, Object> entry :
				_columnOriginalValues.entrySet()) {

			if (!Objects.equals(
					entry.getValue(), getColumnValue(entry.getKey()))) {

				_columnBitmask |= _columnBitmasks.get(entry.getKey());
			}
		}

		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			getCompanyId(), PolicyOptions.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public PolicyOptions toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, PolicyOptions>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		PolicyOptionsImpl policyOptionsImpl = new PolicyOptionsImpl();

		policyOptionsImpl.setPolicyOptionsId(getPolicyOptionsId());
		policyOptionsImpl.setCompanyId(getCompanyId());
		policyOptionsImpl.setUserId(getUserId());
		policyOptionsImpl.setUserName(getUserName());
		policyOptionsImpl.setCreateDate(getCreateDate());
		policyOptionsImpl.setModifiedDate(getModifiedDate());
		policyOptionsImpl.setProposalId(getProposalId());
		policyOptionsImpl.setCurrency(getCurrency());
		policyOptionsImpl.setTermsDate(getTermsDate());
		policyOptionsImpl.setProductCategory(getProductCategory());
		policyOptionsImpl.setProductExtNumber(getProductExtNumber());
		policyOptionsImpl.setIssueDate(getIssueDate());
		policyOptionsImpl.setContractStartDate(getContractStartDate());
		policyOptionsImpl.setContractEndDate(getContractEndDate());
		policyOptionsImpl.setContractPeriod(getContractPeriod());
		policyOptionsImpl.setDurationYear(getDurationYear());
		policyOptionsImpl.setPolicyStartDate(getPolicyStartDate());
		policyOptionsImpl.setPolicyEndDate(getPolicyEndDate());
		policyOptionsImpl.setPolicyNumberDays(getPolicyNumberDays());
		policyOptionsImpl.setCommunicationMethod(getCommunicationMethod());

		policyOptionsImpl.resetOriginalValues();

		return policyOptionsImpl;
	}

	@Override
	public PolicyOptions cloneWithOriginalValues() {
		PolicyOptionsImpl policyOptionsImpl = new PolicyOptionsImpl();

		policyOptionsImpl.setPolicyOptionsId(
			this.<Long>getColumnOriginalValue("policyOptionsId"));
		policyOptionsImpl.setCompanyId(
			this.<Long>getColumnOriginalValue("companyId"));
		policyOptionsImpl.setUserId(
			this.<Long>getColumnOriginalValue("userId"));
		policyOptionsImpl.setUserName(
			this.<String>getColumnOriginalValue("userName"));
		policyOptionsImpl.setCreateDate(
			this.<Date>getColumnOriginalValue("createDate"));
		policyOptionsImpl.setModifiedDate(
			this.<Date>getColumnOriginalValue("modifiedDate"));
		policyOptionsImpl.setProposalId(
			this.<Long>getColumnOriginalValue("proposalId"));
		policyOptionsImpl.setCurrency(
			this.<String>getColumnOriginalValue("currency_"));
		policyOptionsImpl.setTermsDate(
			this.<Date>getColumnOriginalValue("termsDate"));
		policyOptionsImpl.setProductCategory(
			this.<String>getColumnOriginalValue("productCategory"));
		policyOptionsImpl.setProductExtNumber(
			this.<String>getColumnOriginalValue("productExtNumber"));
		policyOptionsImpl.setIssueDate(
			this.<Date>getColumnOriginalValue("issueDate"));
		policyOptionsImpl.setContractStartDate(
			this.<Date>getColumnOriginalValue("contractStartDate"));
		policyOptionsImpl.setContractEndDate(
			this.<Date>getColumnOriginalValue("contractEndDate"));
		policyOptionsImpl.setContractPeriod(
			this.<String>getColumnOriginalValue("contractPeriod"));
		policyOptionsImpl.setDurationYear(
			this.<Integer>getColumnOriginalValue("durationYear"));
		policyOptionsImpl.setPolicyStartDate(
			this.<Date>getColumnOriginalValue("policyStartDate"));
		policyOptionsImpl.setPolicyEndDate(
			this.<Date>getColumnOriginalValue("policyEndDate"));
		policyOptionsImpl.setPolicyNumberDays(
			this.<Integer>getColumnOriginalValue("policyNumberDays"));
		policyOptionsImpl.setCommunicationMethod(
			this.<String>getColumnOriginalValue("communicationMethod"));

		return policyOptionsImpl;
	}

	@Override
	public int compareTo(PolicyOptions policyOptions) {
		long primaryKey = policyOptions.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof PolicyOptions)) {
			return false;
		}

		PolicyOptions policyOptions = (PolicyOptions)object;

		long primaryKey = policyOptions.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isEntityCacheEnabled() {
		return true;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isFinderCacheEnabled() {
		return true;
	}

	@Override
	public void resetOriginalValues() {
		_columnOriginalValues = Collections.emptyMap();

		_setModifiedDate = false;

		_columnBitmask = 0;
	}

	@Override
	public CacheModel<PolicyOptions> toCacheModel() {
		PolicyOptionsCacheModel policyOptionsCacheModel =
			new PolicyOptionsCacheModel();

		policyOptionsCacheModel.policyOptionsId = getPolicyOptionsId();

		policyOptionsCacheModel.companyId = getCompanyId();

		policyOptionsCacheModel.userId = getUserId();

		policyOptionsCacheModel.userName = getUserName();

		String userName = policyOptionsCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			policyOptionsCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			policyOptionsCacheModel.createDate = createDate.getTime();
		}
		else {
			policyOptionsCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			policyOptionsCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			policyOptionsCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		policyOptionsCacheModel.proposalId = getProposalId();

		policyOptionsCacheModel.currency = getCurrency();

		String currency = policyOptionsCacheModel.currency;

		if ((currency != null) && (currency.length() == 0)) {
			policyOptionsCacheModel.currency = null;
		}

		Date termsDate = getTermsDate();

		if (termsDate != null) {
			policyOptionsCacheModel.termsDate = termsDate.getTime();
		}
		else {
			policyOptionsCacheModel.termsDate = Long.MIN_VALUE;
		}

		policyOptionsCacheModel.productCategory = getProductCategory();

		String productCategory = policyOptionsCacheModel.productCategory;

		if ((productCategory != null) && (productCategory.length() == 0)) {
			policyOptionsCacheModel.productCategory = null;
		}

		policyOptionsCacheModel.productExtNumber = getProductExtNumber();

		String productExtNumber = policyOptionsCacheModel.productExtNumber;

		if ((productExtNumber != null) && (productExtNumber.length() == 0)) {
			policyOptionsCacheModel.productExtNumber = null;
		}

		Date issueDate = getIssueDate();

		if (issueDate != null) {
			policyOptionsCacheModel.issueDate = issueDate.getTime();
		}
		else {
			policyOptionsCacheModel.issueDate = Long.MIN_VALUE;
		}

		Date contractStartDate = getContractStartDate();

		if (contractStartDate != null) {
			policyOptionsCacheModel.contractStartDate =
				contractStartDate.getTime();
		}
		else {
			policyOptionsCacheModel.contractStartDate = Long.MIN_VALUE;
		}

		Date contractEndDate = getContractEndDate();

		if (contractEndDate != null) {
			policyOptionsCacheModel.contractEndDate = contractEndDate.getTime();
		}
		else {
			policyOptionsCacheModel.contractEndDate = Long.MIN_VALUE;
		}

		policyOptionsCacheModel.contractPeriod = getContractPeriod();

		String contractPeriod = policyOptionsCacheModel.contractPeriod;

		if ((contractPeriod != null) && (contractPeriod.length() == 0)) {
			policyOptionsCacheModel.contractPeriod = null;
		}

		policyOptionsCacheModel.durationYear = getDurationYear();

		Date policyStartDate = getPolicyStartDate();

		if (policyStartDate != null) {
			policyOptionsCacheModel.policyStartDate = policyStartDate.getTime();
		}
		else {
			policyOptionsCacheModel.policyStartDate = Long.MIN_VALUE;
		}

		Date policyEndDate = getPolicyEndDate();

		if (policyEndDate != null) {
			policyOptionsCacheModel.policyEndDate = policyEndDate.getTime();
		}
		else {
			policyOptionsCacheModel.policyEndDate = Long.MIN_VALUE;
		}

		policyOptionsCacheModel.policyNumberDays = getPolicyNumberDays();

		policyOptionsCacheModel.communicationMethod = getCommunicationMethod();

		String communicationMethod =
			policyOptionsCacheModel.communicationMethod;

		if ((communicationMethod != null) &&
			(communicationMethod.length() == 0)) {

			policyOptionsCacheModel.communicationMethod = null;
		}

		return policyOptionsCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<PolicyOptions, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 2);

		sb.append("{");

		for (Map.Entry<String, Function<PolicyOptions, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<PolicyOptions, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("\"");
			sb.append(attributeName);
			sb.append("\": ");

			Object value = attributeGetterFunction.apply((PolicyOptions)this);

			if (value == null) {
				sb.append("null");
			}
			else if (value instanceof Blob || value instanceof Date ||
					 value instanceof Map || value instanceof String) {

				sb.append(
					"\"" + StringUtil.replace(value.toString(), "\"", "'") +
						"\"");
			}
			else {
				sb.append(value);
			}

			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function<InvocationHandler, PolicyOptions>
			_escapedModelProxyProviderFunction =
				ProxyUtil.getProxyProviderFunction(
					PolicyOptions.class, ModelWrapper.class);

	}

	private long _policyOptionsId;
	private long _companyId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private long _proposalId;
	private String _currency;
	private Date _termsDate;
	private String _productCategory;
	private String _productExtNumber;
	private Date _issueDate;
	private Date _contractStartDate;
	private Date _contractEndDate;
	private String _contractPeriod;
	private int _durationYear;
	private Date _policyStartDate;
	private Date _policyEndDate;
	private int _policyNumberDays;
	private String _communicationMethod;

	public <T> T getColumnValue(String columnName) {
		columnName = _attributeNames.getOrDefault(columnName, columnName);

		Function<PolicyOptions, Object> function =
			AttributeGetterFunctionsHolder._attributeGetterFunctions.get(
				columnName);

		if (function == null) {
			throw new IllegalArgumentException(
				"No attribute getter function found for " + columnName);
		}

		return (T)function.apply((PolicyOptions)this);
	}

	public <T> T getColumnOriginalValue(String columnName) {
		if (_columnOriginalValues == null) {
			return null;
		}

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		return (T)_columnOriginalValues.get(columnName);
	}

	private void _setColumnOriginalValues() {
		_columnOriginalValues = new HashMap<String, Object>();

		_columnOriginalValues.put("policyOptionsId", _policyOptionsId);
		_columnOriginalValues.put("companyId", _companyId);
		_columnOriginalValues.put("userId", _userId);
		_columnOriginalValues.put("userName", _userName);
		_columnOriginalValues.put("createDate", _createDate);
		_columnOriginalValues.put("modifiedDate", _modifiedDate);
		_columnOriginalValues.put("proposalId", _proposalId);
		_columnOriginalValues.put("currency_", _currency);
		_columnOriginalValues.put("termsDate", _termsDate);
		_columnOriginalValues.put("productCategory", _productCategory);
		_columnOriginalValues.put("productExtNumber", _productExtNumber);
		_columnOriginalValues.put("issueDate", _issueDate);
		_columnOriginalValues.put("contractStartDate", _contractStartDate);
		_columnOriginalValues.put("contractEndDate", _contractEndDate);
		_columnOriginalValues.put("contractPeriod", _contractPeriod);
		_columnOriginalValues.put("durationYear", _durationYear);
		_columnOriginalValues.put("policyStartDate", _policyStartDate);
		_columnOriginalValues.put("policyEndDate", _policyEndDate);
		_columnOriginalValues.put("policyNumberDays", _policyNumberDays);
		_columnOriginalValues.put("communicationMethod", _communicationMethod);
	}

	private static final Map<String, String> _attributeNames;

	static {
		Map<String, String> attributeNames = new HashMap<>();

		attributeNames.put("currency_", "currency");

		_attributeNames = Collections.unmodifiableMap(attributeNames);
	}

	private transient Map<String, Object> _columnOriginalValues;

	public static long getColumnBitmask(String columnName) {
		return _columnBitmasks.get(columnName);
	}

	private static final Map<String, Long> _columnBitmasks;

	static {
		Map<String, Long> columnBitmasks = new HashMap<>();

		columnBitmasks.put("policyOptionsId", 1L);

		columnBitmasks.put("companyId", 2L);

		columnBitmasks.put("userId", 4L);

		columnBitmasks.put("userName", 8L);

		columnBitmasks.put("createDate", 16L);

		columnBitmasks.put("modifiedDate", 32L);

		columnBitmasks.put("proposalId", 64L);

		columnBitmasks.put("currency_", 128L);

		columnBitmasks.put("termsDate", 256L);

		columnBitmasks.put("productCategory", 512L);

		columnBitmasks.put("productExtNumber", 1024L);

		columnBitmasks.put("issueDate", 2048L);

		columnBitmasks.put("contractStartDate", 4096L);

		columnBitmasks.put("contractEndDate", 8192L);

		columnBitmasks.put("contractPeriod", 16384L);

		columnBitmasks.put("durationYear", 32768L);

		columnBitmasks.put("policyStartDate", 65536L);

		columnBitmasks.put("policyEndDate", 131072L);

		columnBitmasks.put("policyNumberDays", 262144L);

		columnBitmasks.put("communicationMethod", 524288L);

		_columnBitmasks = Collections.unmodifiableMap(columnBitmasks);
	}

	private long _columnBitmask;
	private PolicyOptions _escapedModel;

}